{"version":3,"sources":["App.module.css","Components/FlexCode.js","Components/FlexContainer.js","Components/FlexAttributes.js","Components/FlexHeading.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FlexCode","props","className","Styles","rootFlexCode","Object","keys","attributes","map","key","index","split","toLowerCase","FlexContainer","dynamicStyles","console","log","heights","style","hoverStyle","singleItem","height","Value","value","attributeName","backgroundColor","color","onClick","setattributes","FlexAttributes","Attributes","flexDirection","flexWrap","justifyContent","alignItems","alignContent","rootFlexAttributes","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","heading","attributesContainer","eachAttributeColumn","attribute","itemOperationsContainer","itemOperations","length","setheights","toast","progress","undefined","slice","FlexHeading","rootFlexHeading","pageHeading","pageSubHeading","link","href","pageDescription","githublink","title","src","App","useState","root","containerSection","otherSection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,iBAAmB,8BAA8B,WAAa,wBAAwB,WAAa,wBAAwB,aAAe,0BAA0B,MAAQ,mBAAmB,mBAAqB,gCAAgC,QAAU,qBAAqB,YAAc,yBAAyB,eAAiB,4BAA4B,KAAO,kBAAkB,gBAAkB,6BAA6B,WAAa,wBAAwB,oBAAsB,iCAAiC,oBAAsB,iCAAiC,wBAA0B,qCAAqC,UAAY,uBAAuB,MAAQ,mBAAmB,eAAiB,4BAA4B,aAAe,0BAA0B,gBAAkB,+B,kHCsCn0BC,MApCf,SAAkBC,GAYd,OACI,sBAAKC,UAAWC,IAAOC,aAAvB,UAUI,sDAGA,kDACKC,OAAOC,KAAKL,EAAMM,YAAYC,KAAI,SAACC,EAAKC,GAAN,MACT,KAA1BT,EAAMM,WAAWE,GACb,gCAAkBA,EAAIE,MAAM,aAAa,GAAGC,cAAgB,IAAMH,EAAIE,MAAM,aAAa,GAAGC,cAA5F,MAA8GX,EAAMM,WAAWE,GAA/H,MAAUC,GAAoI,QAEtJ,wCCjBGG,MAdf,SAAuBZ,GACnB,IAAMa,EAAgB,GAMtB,OALAT,OAAOC,KAAKL,EAAMM,YAAYC,KAAI,SAAAC,GAC9BM,QAAQC,IAAIP,EAAM,MAAQR,EAAMM,WAAWE,IAC3CK,EAAc,GAAD,OAAIL,IAASR,EAAMM,WAAWE,MAE/CM,QAAQC,IAAI,UAAWf,EAAMgB,SAEzB,qBAAKC,MAAOJ,EAAeZ,UAAWC,IAAOgB,WAA7C,SACKlB,EAAMgB,QAAQT,KAAI,SAACS,EAASP,GAAV,OAAoB,qBAAiBR,UAAWC,IAAOiB,WAAYF,MAAO,CAAEG,OAAO,GAAD,OAAKJ,EAAL,OAA9D,SAAmFP,EAAQ,GAAjFA,S,mCCqE7D,SAASY,EAAMrB,GACX,OACI,qBAAKC,UAAWC,IAAOoB,MAAOL,MAAOjB,EAAMM,WAAN,UAAoBN,EAAMuB,kBAAqBvB,EAAMsB,MAAQ,CAAEE,gBAAiB,UAAWC,MAAO,QAAW,GAC9IC,QAAS,WACL1B,EAAM2B,cAAN,2BAAyB3B,EAAMM,YAA/B,4BAA+CN,EAAMuB,eAAkBvB,EAAMM,WAAN,UAAoBN,EAAMuB,kBAAqBvB,EAAMsB,MAAQ,GAAKtB,EAAMsB,UAFvJ,SAIKtB,EAAMsB,QAKJM,MAvFf,SAAwB5B,GACpB,IAAM6B,EAAa,CACfC,cAAe,CAAC,MAAO,cAAe,SAAU,kBAChDC,SAAU,CAAC,SAAU,OAAQ,gBAC7BC,eAAgB,CAAC,aAAc,WAAY,SAAU,gBAAiB,eAAgB,gBACtFC,WAAY,CAAC,aAAc,WAAY,SAAU,WAAY,WAC7DC,aAAc,CAAC,aAAc,WAAY,SAAU,gBAAiB,eAAgB,iBAGxF,OAEI,sBAAKjC,UAAWC,IAAOiC,mBAAvB,UACI,cAAC,IAAD,CACIC,SAAS,aACTC,UAAW,IACXC,iBAAe,EACfC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAW,EACXC,cAAc,IAElB,qBAAK3C,UAAWC,IAAO2C,QAAvB,wBACA,sBAAK5C,UAAWC,IAAO4C,oBAAvB,UACK1C,OAAOC,KAAKL,EAAMM,YAAYC,KAAI,SAACgB,EAAed,GAAhB,OAC/B,sBAAKR,UAAWC,IAAO6C,oBAAvB,UACI,qBAAK9C,UAAWC,IAAO8C,UAAvB,SACKzB,EAAcb,MAAM,aAAa,GAAGC,cAAgB,IAAMY,EAAcb,MAAM,aAAa,GAAGC,gBAElGkB,EAAW,GAAD,OAAIN,IAAiBhB,KAAI,SAACe,EAAOb,GAAR,OAAkB,cAACY,EAAD,CAAOC,MAAOA,EAAmBhB,WAAYN,EAAMM,WAAYiB,cAAeA,EAAeI,cAAe3B,EAAM2B,eAAxFlB,QAJnCA,MAOrD,2BAGJ,sBAAKR,UAAWC,IAAO+C,wBAAvB,UACI,qBAAKhD,UAAWC,IAAO8C,UAAvB,wBACA,qBAAK/C,UAAWC,IAAOgD,eAAgBxB,QAAS,WACxC1B,EAAMgB,QAAQmC,OAAS,GACvBnD,EAAMoD,WAAN,sBAAqBpD,EAAMgB,SAA3B,CAAoC,MAGpCqC,YAAM,oCAAqC,CACvCjB,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBE,cAAc,EACdI,cAAc,EACdD,WAAW,EACXW,cAAUC,KAZtB,sBAgBA,qBAAKtD,UAAWC,IAAOgD,eAAgBxB,QAAS,WACxC1B,EAAMgB,QAAQmC,OAAS,EACvBnD,EAAMoD,WAAN,YAAqBpD,EAAMgB,QAAQwC,MAAM,EAAIxD,EAAMgB,QAAQmC,OAAS,KAIpEE,YAAM,+BAAgC,CAClCjB,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBE,cAAc,EACdI,cAAc,EACdD,WAAW,EACXW,cAAUC,KAbtB,gCC7CDE,MAXf,SAAqBzD,GACjB,OACI,sBAAKC,UAAWC,IAAOwD,gBAAvB,UACI,qBAAKzD,UAAWC,IAAOyD,YAAvB,2BACA,sBAAK1D,UAAWC,IAAO0D,eAAvB,gBAA0C,mBAAG3D,UAAWC,IAAO2D,KAAMC,KAAK,kCAAhC,2BAC1C,qBAAK7D,UAAWC,IAAO6D,gBAAvB,oKACA,qBAAK9D,UAAWC,IAAO8D,WAAvB,SAAmC,mBAAGF,KAAK,gDAAR,SAAwD,qBAAKG,MAAM,6BAA6BC,IAAI,0FCyBpIC,MA3Bf,WAAgB,IAAD,EACuBC,mBAClC,CACEtC,cAAe,GACfC,SAAU,GACVC,eAAgB,GAChBC,WAAY,GACZC,aAAc,KAPL,mBACN5B,EADM,KACMqB,EADN,OAUiByC,mBAAS,CAAC,GAAI,GAAI,GAAI,KAVvC,mBAUNpD,EAVM,KAUGoC,EAVH,KAYb,OACE,sBAAKnD,UAAWC,IAAOmE,KAAvB,UACE,sBAAKpE,UAAWC,IAAOoE,iBAAvB,UACE,cAAC,EAAD,CAAetD,QAASA,EAASV,WAAYA,IAC7C,cAAC,EAAD,OAEF,sBAAKL,UAAWC,IAAOqE,aAAvB,UACE,cAAC,EAAD,CAAgBjE,WAAYA,EAAYqB,cAAeA,EAAeX,QAASA,EAASoC,WAAYA,IACpG,cAAC,EAAD,CAAU9C,WAAYA,WCffkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b919fe9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2QjaE\",\"containerSection\":\"App_containerSection__1d2A_\",\"hoverStyle\":\"App_hoverStyle__pansl\",\"singleItem\":\"App_singleItem__3cNs-\",\"otherSection\":\"App_otherSection__gHFWz\",\"hLine\":\"App_hLine__2dH3Y\",\"rootFlexAttributes\":\"App_rootFlexAttributes__-U5r6\",\"heading\":\"App_heading__3I1U5\",\"pageHeading\":\"App_pageHeading__1Suhq\",\"pageSubHeading\":\"App_pageSubHeading__2Hn5R\",\"link\":\"App_link__3VkJt\",\"pageDescription\":\"App_pageDescription__2i069\",\"githublink\":\"App_githublink__3l8Ed\",\"attributesContainer\":\"App_attributesContainer__1_VqQ\",\"eachAttributeColumn\":\"App_eachAttributeColumn__1ItT5\",\"itemOperationsContainer\":\"App_itemOperationsContainer__15GcZ\",\"attribute\":\"App_attribute__3OBR_\",\"value\":\"App_value__2ylly\",\"itemOperations\":\"App_itemOperations__2pwCJ\",\"rootFlexCode\":\"App_rootFlexCode__vxurB\",\"rootFlexHeading\":\"App_rootFlexHeading__2xjGc\"};","// import React, { useRef, useState } from 'react';\r\nimport Styles from '../App.module.css';\r\n\r\nfunction FlexCode(props) {\r\n    // const textAreaRef = useRef(null);\r\n    // const [copySuccess, setCopySuccess] = useState('');\r\n\r\n    // const copyToClipboard = (e) => {\r\n    //     textAreaRef.current.select();\r\n    //     document.execCommand('copy');\r\n    //     // This is just personal preference.\r\n    //     // I prefer to not show the whole text area selected.\r\n    //     e.target.focus();\r\n    //     setCopySuccess('Copied!');\r\n    // };\r\n    return (\r\n        <div className={Styles.rootFlexCode}>\r\n            {\r\n                /* Logical shortcut for only displaying the \r\n                   button if the copy command exists */\r\n                // document.queryCommandSupported('copy') &&\r\n                // <div>\r\n                //     <button onClick={() => copyToClipboard}>Copy</button>\r\n                //     {copySuccess}\r\n                // </div>\r\n            }\r\n            <div\r\n            // ref={textAreaRef}\r\n            >. Container {`{`}</div>\r\n            <div>display : flex,</div>\r\n            {    Object.keys(props.attributes).map((key, index) =>\r\n                props.attributes[key] !== \"\" ?\r\n                    <div key={index}>{key.split(/(?=[A-Z])/)[0].toLowerCase() + '-' + key.split(/(?=[A-Z])/)[1].toLowerCase()} : {props.attributes[key]},</div> : null\r\n            )}\r\n            <div>{`}`}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlexCode;","import React from 'react';\r\nimport Styles from '../App.module.css';\r\n\r\nfunction FlexContainer(props) {\r\n    const dynamicStyles = {}\r\n    Object.keys(props.attributes).map(key => {\r\n        console.log(key + \" : \" + props.attributes[key])\r\n        dynamicStyles[`${key}`] = props.attributes[key]\r\n    })\r\n    console.log(\"heights\", props.heights)\r\n    return (\r\n        <div style={dynamicStyles} className={Styles.hoverStyle}>\r\n            {props.heights.map((heights, index) => <div key={index} className={Styles.singleItem} style={{ height: `${heights}px` }}>{index + 1}</div>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlexContainer;","import React from 'react';\r\nimport Styles from '../App.module.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction FlexAttributes(props) {\r\n    const Attributes = {\r\n        flexDirection: [\"row\", \"row-reverse\", \"column\", \"column-reverse\"],\r\n        flexWrap: [\"nowrap\", \"wrap\", \"wrap-reverse\"],\r\n        justifyContent: [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"],\r\n        alignItems: [\"flex-start\", \"flex-end\", \"center\", \"baseline\", \"stretch\"],\r\n        alignContent: [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"],\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={Styles.rootFlexAttributes} >\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={3000}\r\n                hideProgressBar\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable={false}\r\n                pauseOnHover={false}\r\n            />\r\n            <div className={Styles.heading}>Attributes</div>\r\n            <div className={Styles.attributesContainer}>\r\n                {Object.keys(props.attributes).map((attributeName, index) =>\r\n                    <div className={Styles.eachAttributeColumn} key={index}>\r\n                        <div className={Styles.attribute}>\r\n                            {attributeName.split(/(?=[A-Z])/)[0].toLowerCase() + '-' + attributeName.split(/(?=[A-Z])/)[1].toLowerCase()}\r\n                        </div>\r\n                        {Attributes[`${attributeName}`].map((value, index) => <Value value={value} key={index} attributes={props.attributes} attributeName={attributeName} setattributes={props.setattributes} />)}\r\n                    </div>)\r\n                }\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div className={Styles.itemOperationsContainer}>\r\n                <div className={Styles.attribute}>Flex Items</div>\r\n                <div className={Styles.itemOperations} onClick={() => {\r\n                    if (props.heights.length < 24) {\r\n                        props.setheights([...props.heights, 50])\r\n                    }\r\n                    else {\r\n                        toast('Maximum of 24 items can be added!', {\r\n                            position: \"top-center\",\r\n                            autoClose: 3000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: false,\r\n                            draggable: false,\r\n                            progress: undefined,\r\n                        });\r\n                    }\r\n                }}>add item</div>\r\n                <div className={Styles.itemOperations} onClick={() => {\r\n                    if (props.heights.length > 1) {\r\n                        props.setheights([...props.heights.slice(0, (props.heights.length - 1))])\r\n                    }\r\n                    else {\r\n\r\n                        toast(\"Cannot remove anymore items!\", {\r\n                            position: \"top-center\",\r\n                            autoClose: 3000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: false,\r\n                            draggable: false,\r\n                            progress: undefined,\r\n                        });\r\n                    }\r\n                }}>remove item</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Value(props) {\r\n    return (\r\n        <div className={Styles.value} style={props.attributes[`${props.attributeName}`] === props.value ? { backgroundColor: \"#ffa500\", color: \"#fff\" } : {}}\r\n            onClick={() => {\r\n                props.setattributes({ ...props.attributes, [`${props.attributeName}`]: props.attributes[`${props.attributeName}`] === props.value ? \"\" : props.value });\r\n            }}>\r\n            {props.value}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlexAttributes;","import React from 'react';\r\nimport Styles from '../App.module.css';\r\n\r\nfunction FlexHeading(props) {\r\n    return (\r\n        <div className={Styles.rootFlexHeading}>\r\n            <div className={Styles.pageHeading}>FlexBox-Guide</div>\r\n            <div className={Styles.pageSubHeading}>By <a className={Styles.link} href=\"https://github.com/Souravdey777\">Sourav Dey</a></div>\r\n            <div className={Styles.pageDescription}>CSS Flexible Box Layout is a module of CSS that defines a CSS box model optimized for user interface design, and the layout of items in one dimension.</div>\r\n            <div className={Styles.githublink}><a href=\"https://github.com/Souravdey777/flexbox-guide\"><img title=\"FlexBox-Guide Github Repo.\" src=\"https://img.shields.io/badge/-Github-333?style=flat&logo=github&logoColor=fff\" /></a></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlexHeading;","import React, { useState } from 'react';\r\nimport Styles from './App.module.css';\r\nimport FlexCode from './Components/FlexCode';\r\nimport FlexContainer from './Components/FlexContainer';\r\nimport FlexAttributes from './Components/FlexAttributes';\r\nimport FlexHeading from './Components/FlexHeading';\r\n\r\nfunction App() {\r\n  const [attributes, setattributes] = useState(\r\n    {\r\n      flexDirection: \"\",\r\n      flexWrap: \"\",\r\n      justifyContent: \"\",\r\n      alignItems: \"\",\r\n      alignContent: \"\",\r\n    }\r\n  );\r\n  const [heights, setheights] = useState([50, 50, 50, 50]);\r\n\r\n  return (\r\n    <div className={Styles.root}>\r\n      <div className={Styles.containerSection}>\r\n        <FlexContainer heights={heights} attributes={attributes} />\r\n        <FlexHeading />\r\n      </div>\r\n      <div className={Styles.otherSection}>\r\n        <FlexAttributes attributes={attributes} setattributes={setattributes} heights={heights} setheights={setheights} />\r\n        <FlexCode attributes={attributes} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}